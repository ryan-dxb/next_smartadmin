version: "3"

services:
  # Api Service
  api:
    restart: always
    build:
      context: ./backend
      dockerfile: ./docker/local/Dockerfile
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./backend:/app
    depends_on:
      - mongodb
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb
    networks:
      - nextapp

  # Frontend Client Service
  frontend-client:
    build:
      context: ./frontend-client
      dockerfile: ./docker/local/Dockerfile
    restart: on-failure

    volumes:
      - /app/node_modules
      - ./frontend-client:/app
    environment:
      - WATCHPACK_POLLING=true
    networks:
      - nextapp

  # Frontend Admin Service
  frontend-admin:
    build:
      context: ./frontend-admin
      dockerfile: ./docker/local/Dockerfile
    # restart: on-failure

    volumes:
      - /app/node_modules
      - ./frontend-admin:/app
    environment:
      - WATCHPACK_POLLING=true
    networks:
      - nextapp

  # MongoDB Service
  mongodb:
    image: mongo:5.0.6-focal
    restart: always
    env_file:
      - .env
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    networks:
      - nextapp

  # Mongo Express Service
  mongo-express:
    image: mongo-express:0.54.0
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123456
    networks:
      - nextapp

  # Nginx Service
  nginx:
    build:
      context: ./nginx
      dockerfile: ./docker/local/Dockerfile
    ports:
      - "80:80"
      # - "81:81"
    # volumes:
    #   - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend-client
      - frontend-admin
      - api
    networks:
      - nextapp

networks:
  nextapp:
    driver: bridge

volumes:
  mongodb-data:
